{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","findMovie","title","fetch","then","response","json","FindMovie","addMovie","useState","setTitle","setMovie","isError","setError","getMovie","a","foundMovie","Response","onSubmit","event","preventDefault","htmlFor","value","onChange","target","type","id","placeholder","onClick","App","setMovies","some","film","prevMovies","ReactDOM","render","document","getElementById"],"mappings":"8TAOaA,EAA6B,SAACC,GACzC,IAAQC,EAAUD,EAAVC,MAER,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,EAAMK,aAIrC,sBAAKJ,UAAU,UAAf,UACGD,EAAMM,KACP,iCC7BGC,EAA8B,SAACR,GAC1C,IAAQS,EAAWT,EAAXS,OAER,OACE,qBAAKP,UAAU,SAAf,SACGO,EAAOC,KAAI,SAAAT,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMU,c,6BCfd,SAASC,EAAUC,GACxB,OAAOC,MAAM,8CAAD,OAA+CD,IACxDE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAd,GAAK,OAAIA,KCMZ,IAAMiB,EAA6B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC3C,EAA0BC,mBAAS,IAAnC,mBAAOP,EAAP,KAAcQ,EAAd,KACA,EAA0BD,mBAAuB,MAAjD,mBAAOnB,EAAP,KAAcqB,EAAd,KACA,EAA4BF,oBAAkB,GAA9C,mBAAOG,EAAP,KAAgBC,EAAhB,KAEMC,EAAQ,uCAAG,4BAAAC,EAAA,sEACUd,EAAUC,GADpB,OAGa,WAFtBc,EADS,QAGAC,UACbN,EAAS,MACTE,GAAS,KAETF,EAASK,GACTH,GAAS,IARI,2CAAH,qDAsBd,OACE,qCACE,uBACEtB,UAAU,aACV2B,SAdqC,SAACC,GAC1CA,EAAMC,iBACF9B,IACFkB,EAASlB,GACToB,EAAS,IACTC,EAAS,MACTE,GAAS,KAMT,UAIE,sBAAKtB,UAAU,QAAf,UACE,wBAAOA,UAAU,QAAQ8B,QAAQ,cAAjC,wBAEE,qBAAK9B,UAAU,UAAf,SACE,uBACE+B,MAAOpB,EACPqB,SAAU,SAAAJ,GAAK,OAAIT,EAASS,EAAMK,OAAOF,QACzCG,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZpC,UAAU,eAKfqB,GACC,mBAAGrB,UAAU,iBAAb,qDAMJ,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACEqC,QAASd,EACTW,KAAK,SACLlC,UAAU,kBAHZ,4BASF,qBAAKA,UAAU,UAAf,SACE,wBACEkC,KAAK,SACLlC,UAAU,oBAFZ,qCAUN,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,qBACED,GAAS,cAAC,EAAD,CAAWA,MAAOA,WCjFxBuC,EAAuB,WAClC,MAA4BpB,mBAAkB,IAA9C,mBAAOX,EAAP,KAAegC,EAAf,KASA,OACE,sBAAKvC,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYO,OAAQA,MAEtB,qBAAKP,UAAU,UAAf,SACE,cAAC,EAAD,CAAWiB,SAbA,SAAClB,IACXQ,EAAOiC,MAAK,SAAAC,GAAI,OAAIA,EAAKhC,SAAWV,EAAMU,WAC1CV,EAAMU,QACT8B,GAAU,SAAAG,GAAU,4BAAQA,GAAR,CAAoB3C,gBCT9C4C,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.7ee5d19e.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","export function findMovie(title: string): Promise<Movie> {\n  return fetch(`https://www.omdbapi.com/?apikey=c87ce527&t=${title}`)\n    .then(response => response.json())\n    .then(movie => movie);\n}\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport { MovieCard } from '../MovieCard';\nimport { findMovie } from '../../api';\n\ntype Props = {\n  addMovie: (movie: Movie) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [title, setTitle] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [isError, setError] = useState<boolean>(false);\n\n  const getMovie = async () => {\n    const foundMovie = await findMovie(title);\n\n    if (foundMovie.Response === 'False') {\n      setMovie(null);\n      setError(true);\n    } else {\n      setMovie(foundMovie);\n      setError(false);\n    }\n  };\n\n  const submitForm: React.FormEventHandler = (event) => {\n    event.preventDefault();\n    if (movie) {\n      addMovie(movie);\n      setTitle('');\n      setMovie(null);\n      setError(false);\n    }\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={submitForm}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n            <div className=\"control\">\n              <input\n                value={title}\n                onChange={event => setTitle(event.target.value)}\n                type=\"text\"\n                id=\"movie-title\"\n                placeholder=\"Enter a title to search\"\n                className=\"input\"\n              />\n            </div>\n          </label>\n\n          {isError && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              onClick={getMovie}\n              type=\"button\"\n              className=\"button is-light\"\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-primary\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        { movie && <MovieCard movie={movie} />}\n      </div>\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\ntype Props = {};\n\nexport const App: React.FC<Props> = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (movie: Movie) => {\n    if (!movies.some(film => film.imdbID === movie.imdbID)\n      && movie.imdbID) {\n      setMovies(prevMovies => [...prevMovies, movie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}